<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.harmoni.pos.menu.mapper.StoreMapper">

  <resultMap id="BaseResultMap" type="com.harmoni.pos.menu.model.Store">
    <id column="store_id" jdbcType="INTEGER" property="id" />
    <result column="store_name" jdbcType="VARCHAR" property="name" />
    <result column="store_tier_id" jdbcType="INTEGER" property="tierId" />
    <result column="store_chain_id" jdbcType="INTEGER" property="chainId" />
    <result column="store_address" jdbcType="VARCHAR" property="address" />
    <result column="store_created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="store_updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="store_deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <association property="chain" javaType="com.harmoni.pos.menu.model.Chain">
      <id column="chain_id" jdbcType="INTEGER" property="id" />
      <result column="chain_name" jdbcType="VARCHAR" property="name" />
    </association>
    <association property="tier" javaType="com.harmoni.pos.menu.model.Tier">
      <id column="tier_id" jdbcType="INTEGER" property="id" />
      <result column="tier_name" jdbcType="VARCHAR" property="name" />
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    store.id as store_id,
    store.name as store_name,
    store.tier_id as store_tier_id,
    store.chain_id as store_chain_id,
    store.address as store_address,
    store.created_at as store_created_at,
    store.updated_at as store_updated_at,
    store.deleted_at as store_deleted_at
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />,
    <include refid="com.harmoni.pos.menu.mapper.ChainMapper.Base_Column_List"/>,
    <include refid="com.harmoni.pos.menu.mapper.TierMapper.Base_Column_List"/>
    from stores store
      left join chains chain on store.chain_id = chain.id
      left join tiers tier on store.tier_id = tier.id
    where store.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByNameTierIdChainId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />,
    <include refid="com.harmoni.pos.menu.mapper.ChainMapper.Base_Column_List"/>,
    <include refid="com.harmoni.pos.menu.mapper.TierMapper.Base_Column_List"/>
    from stores store
    left join chains chain on store.chain_id = chain.id
    left join tiers tier on store.tier_id = tier.id
    where store.name = #{name,jdbcType=VARCHAR}
          and store.tier_id = #{tierId,jdbcType=INTEGER}
          and store.brand_id = #{brandId,jdbcType=INTEGER}
  </select>

  <select id="selectAllByBrandId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />,
      <include refid="com.harmoni.pos.menu.mapper.ChainMapper.Base_Column_List"/>,
      <include refid="com.harmoni.pos.menu.mapper.TierMapper.Base_Column_List"/>
      from stores store
      left join chains chain on store.chain_id = chain.id
      left join tiers tier on store.tier_id = tier.id
      where store.chain_id = #{chainId,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stores
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.harmoni.pos.menu.model.Store">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stores (name, tier_id, chain_id,
      address, created_at, updated_at, 
      deleted_at)
    values (#{name,jdbcType=VARCHAR}, #{tierId,jdbcType=INTEGER}, #{chainId,jdbcType=INTEGER},
      #{address,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.harmoni.pos.menu.model.Store">
    update stores
    set name = #{name,jdbcType=VARCHAR},
      tier_id = #{tierId,jdbcType=INTEGER},
      chain_id = #{chainId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>